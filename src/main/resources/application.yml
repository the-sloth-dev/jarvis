vaadin:
  # launches the browser when the application starts.
  launch-browser: true

logging:
  # control application logging.
  file:
    name: /tmp/jarvis.log
  level:
    dev:
      thesloth: DEBUG

spring:
  application:
    name: jarvis
  ai:
    ollama:
      init:
        # Whether to pull models at startup-time and how.
        # - always: Always pull the model, even if it’s already available.
        #           Useful to ensure you’re using the latest version of the model.
        # - when_missing: Only pull the model if it’s not already available.
        #                 This may result in using an older version of the model.
        # - never: Never pull the model automatically.
        pull-model-strategy: when_missing
        # How long to wait for a model to be pulled.
        timeout: 60s
        # Maximum number of retries for the model pull operation.
        max-retries: 3
      # Base URL where Ollama API server is running.
      base-url: ${BASE_URL:http://localhost:11434}
      embedding:
        # The name of the supported model to use. You can use dedicated Embedding Model types
        model: ${EMBEDDING_MODEL:nomic-embed-text}
        options:
          # Reduces the probability of generating nonsense.
          # A higher value (e.g., 100) will give more diverse answers,
          # while a lower value (e.g., 10) will be more conservative.
          top-k: ${EMBEDDING_TOP_K:1}
          # Works together with top-k.
          # A higher value (e.g., 0.95) will lead to more diverse text,
          # while a lower value (e.g., 0.5) will generate more focused and conservative text.
          top-p: ${EMBEDDING_TOP_P:0.5}
        enabled: true
      chat:
        # The name of the model to use.
        # Supported models: https://ollama.com/library
        model: ${CHAT_MODEL:llama3} # llama3.2:3b
        options:
          # Reduces the probability of generating nonsense.
          # A higher value (e.g., 100) will give more diverse answers,
          # while a lower value (e.g., 10) will be more conservative.
          top-k: ${CHAT_TOP_K:1}
          # Works together with top-k.
          # A higher value (e.g., 0.95) will lead to more diverse text,
          # while a lower value (e.g., 0.5) will generate more focused and conservative text.
          top-p: ${CHAT_TOP_P:0.5}
          # The temperature of the model.
          # Increasing the temperature will make the model answer more creatively.
          temperature: ${CHAT_TEMPERATURE:0.1}
    vectorstore:
      pgvector:
        # Nearest neighbor search index type.
        # - NONE: exact nearest neighbor search
        # - IVFFlat: index divides vectors into lists, and then searches a subset of those lists that are closest
        #            to the query vector. It has faster build times and uses less memory than HNSW, but has lower
        #            query performance (in terms of speed-recall tradeoff).
        # - HNSW: creates a multilayer graph. It has slower build times and uses more memory than IVFFlat,
        #         but has better query performance (in terms of speed-recall tradeoff). There’s no training step like
        #         IVFFlat, so the index can be created without any data in the table.
        index-type: HNSW
        # Search distance type
        # - COSINE_DISTANCE: used for text embeddings, word embeddings, and high-dimensional data.
        # - EUCLIDEAN_DISTANCE: used in image similarity, physical distance computations, and clustering algorithms.
        # - NEGATIVE_INNER_PRODUCT: used in machine learning models, recommendation systems, and certain ANN (Approximate Nearest Neighbor) searches.
        distance-type: COSINE_DISTANCE
        # Embeddings dimension. If not specified explicitly the PgVectorStore will retrieve the dimensions
        # form the provided EmbeddingModel. Dimensions are set to the embedding column the on table creation.
        # If you change the dimensions your would have to re-create the vector_store table as well.
        dimensions: 768
        # Maximum number of documents to process in a single batch.
        max-document-batch-size: 10000
        # Enables schema and table name validation to ensure they are valid and existing objects.
        # This ensures the correctness of the names and reduces the risk of SQL injection attacks.
        schema-validation: false
        # Whether to initialize the required schema
        initialize-schema: false
        # Deletes the existing vector_store table on start up.
        remove-existing-vector-store-table: false
    etl:
      reader:
        # location where documents to be read are located.
        directory: /tmp/jarvis/documents
        supported:
          # specifies the types of documents that can be read.
          extensions: "*.{pdf,docx,txt,pages,csv}"
    rag:
      # Similarity threshold that accepts all search scores.
      # A threshold value of 0.0 means any similarity is accepted or disable the similarity threshold filtering.
      # A threshold value of 1.0 means an exact match is required.
      similarity-threshold: 0.5
      # the top 'k' search results that have the same similarity.
      top-k: 4

  datasource:
    url: jdbc:postgresql://localhost:5433/postgres
    username: postgres
    password: postgres